Lab 03

Exercise 3.1
    
    a) 
        Depth first search doesn't work even on the easy one. That's because
        it has way too many options to look through. DPS searches every possible
        path to find the solution, which is horribly inefficient. It takes 86
        seconds to give up and fail.

        AC3 runs very quickly, printing its results in fractions of a second.
        It the constraints for each "step" or "move". If the move is determined
        to be invalid or "inconsistent" with the goal state, it removes it from
        the queue of available moves. This allows the algorithm to "infer" the 
        correct solution. Which works better for simple solution. For more
        complex problems, it is necessary to search for the solution, which thus
        algorithm does not do.

        Back-Tracking 

Exercise 3.2
    a)
        AC3 can get to N's or arbitrarily large because it doesn't do a full on search.
        However, it will rarely find a solution for those same reasons.


Exercise 3.3

    a) 
    Traditional search problems in some ways have more simple specifications.
    They specify goals, actions, and starting states then the algorithm takes
    care of the rest. CSP problems also specify goals, and actions (called domains
    in this context). However, CSP problems also define neighbors  and constraints.

    Search problems are concerned with the process. They calculate things like path
    cost and keeps track of the series of steps it takes to get there. CSP problems
    are more so concerned with large domains 